---
import { type CollectionEntry, getCollection } from "astro:content";
import { formatDate } from "@packages/utils/date";
import SuperTitle from "@packages/ui/SuperTitle.astro";
import Responsive from "@packages/ui/Responsive.astro";
import Layout from "../../../layouts/Layout.astro";
import Player from "../../../components/Player.astro";
import BadidonSubscribe from "../../../components/BadidonSubscribe.astro";

interface Props {
  entry: CollectionEntry<"badidon">;
}

export async function getStaticPaths() {
  const badidonEntries = await getCollection("badidon");
  return badidonEntries.map((post) => ({
    params: { slugB: post.slug },
    props: { post },
  }));
}

interface Props {
  post: CollectionEntry<"badidon">;
}

const { post } = Astro.props;

const { Content } = await post.render();
---

<Layout
  title={post.data.title}
  description={post.data.description}
  metaImage="/public/assets/badidon-badidon.jpg"
>
  <article>
    <SuperTitle title={post.data.title} />

    <Responsive>
      <Player
        url={post.data.audioUrl}
        image="/public/assets/badidon-badidon.jpg"
        title={post.data.title}
        analytics={`badidon-${post.slug}`}
      />

      <Content />

      <hr />

      <p class="date">
        Publié le {formatDate(post.data.date, "fr")}, dernière modification le {
          formatDate(post.data.updatedAt, "fr")
        }.
      </p>

      {
        post.data.tags && post.data.tags.length > 0 && (
          <p>
            <span>Tags:</span>
            <span>
              {" "}
              {post.data.tags.map((t) => (
                <a href={`/ied/tag/${t}`}>#{t}</a>
              ))}
            </span>
          </p>
        )
      }

      <BadidonSubscribe />
    </Responsive>
  </article>
</Layout>

<style>
  article {
    position: relative;
  }

  h1 {
    color: var(--wevet);
    margin: 0 0 var(--babase);
    padding: var(--base) var(--babase);
    background: var(--prime);
  }
</style>
