---
import { getCollection } from "astro:content";
import { formatDate } from "@packages/utils/date";
import Layout from "../../../layouts/Layout.astro";
import Responsive from "@packages/ui/Responsive.astro";
import SuperTitle from "@packages/ui/SuperTitle.astro";

export async function getStaticPaths() {
  const posts = await getCollection("posts");
  const badidon = await getCollection("badidon");
  const items = [...posts, ...badidon];
  const tags = [...new Set(items.flatMap((el) => el.data.tags))].filter(
    (t) => !!t,
  );

  return tags.map((t) => {
    return {
      params: { tag: t },
      props: {
        tag: t,
        posts: items.filter((el) => (el.data.tags ?? []).includes(t)),
      },
    };
  });
}

const { tag, posts } = Astro.props;

let sortedPosts = posts.sort(
  (a, b) => new Date(b.data.date).valueOf() - new Date(a.data.date).valueOf(),
);
---

<Layout>
  <article>
    <SuperTitle title={`Billets avec l'étiquette « ${tag} »`} />
    <Responsive>
      {
        sortedPosts.map(
          ({ data: { description, title, date, audioUrl }, slug }) => (
            <div class="post">
              {audioUrl ? (
                <a href={`/ied/badidon/${slug}`}>
                  <span>🎙️</span>
                  <span>{title}</span>
                </a>
              ) : (
                <a href={`/ied/${slug}`}>{title}</a>
              )}
              <time datetime={date}>{formatDate(date)}</time>
              <span>{description}</span>
            </div>
          ),
        )
      }
    </Responsive>
  </article>
</Layout>

<style>
  .post {
    display: flex;
    flex-direction: column;
  }

  a {
    display: inline-flex;
    gap: var(--base);
  }
</style>
