---
import { contentfulClient } from "../../lib/contentful";
import Layout from "../../layouts/Layout.astro";
import {Art, getTitle} from "../../lib/art";
import slugify from "@sindresorhus/slugify"

const entries = await contentfulClient.getEntries<Art>({
	content_type: "art",
	limit: 50,
	order: 'fields.date',
	select: "fields.name,fields.slug,fields.artist,fields.date,fields.media",
});

const posts = entries.items.map((item) => {
	const { name, slug, artist, date } = item.fields;
	return {
		name,
		slug,
		date,
		artist: artist.fields.name,
		media: item.fields.media.map((i) => i.fields.file.url),
	};
});
const artists = Array.from(new Set(posts.map((i) => i.artist))).sort();
---

<Layout title="/ [ehret.me]">
	<h1>Museum of Poorly Photographed Art</h1>

	<button class="show-artists">Show artists</button>

	<div class="tacos">
		<div class="filters">
			<button class="artists-all">All</button>
			{artists.map(artist => (
				<button class="artist-select" data-artist={slugify(artist)}>{artist}</button>
			))}
		</div>

		<div class="grid">
			{posts.map((item) => (
				<a class="item active" href={`/museum/${item.slug}`} data-artist={slugify(item.artist)}>
					<figure>
						<figcaption>{getTitle(item)}</figcaption>
						<img loading="lazy" src={`${item.media[0]}?fm=jpg&q=50&w=300`} alt={getTitle(item)} />
					</figure>
				</a>
			))}
		</div>
	</div>
</Layout>

<script>
	function handleShowArtists() {
		document.querySelector(".filters").classList.toggle("show");
	}
	document.querySelector(".show-artists").addEventListener("click", handleShowArtists);

	function handleFilter(e) {
		const {artist} = e.target.dataset;
		const items = Array.from(document.querySelectorAll(".grid .item"));
		items.forEach(item => item.classList.remove("active"));
		const itemsToActivate = artist ? items.filter(item => item.dataset.artist === artist) : items;
		itemsToActivate.forEach(item => item.classList.add("active"));

		const toggle = document.querySelector(".filters");
		if (toggle.classList.contains("show")) {
			toggle.classList.toggle("show");
		}
	}
	Array.from(document.querySelectorAll(".filters button")).forEach(el => el.addEventListener("click", handleFilter));
</script>

<style>
	.tacos {
		display: grid;
		grid-template-columns: 1fr;
		gap: 16px;
	}

	.filters {
		display: none;
		flex-direction: column;
		gap: 4px;
	}
	.filters.show {
		display: flex;
	}

	.filters button {
		border-radius: 0;
		background-color: var(--lake-red);
		color: var(--wevet);
		border: 2px solid transparent;
	}

	.filters button:is(:active, :focus) {
		border-color: var(--wevet);
	}

	@media screen and (min-width: 40rem) {
		.tacos {
			grid-template-columns: 200px 1fr;
		}

		.show-artists {
			display: none;
		}

		.filters {
			display: flex;
		}

		.grid {
			--cols: 3;
		}

		@supports not (grid-template-rows: masonry) {
			.grid {
				column-count: var(--cols);
				gap: 16px;
				width: 100%;
			}

			.grid > * {
				break-inside: avoid;
				margin-bottom: 16px;
			}
		}

		@supports (grid-template-rows: masonry) {
			.grid {
				display: grid;
				grid-template-columns: repeat(var(--cols), 1fr);
				grid-template-rows: masonry;
				gap: 16px;
			}
		}
	}

	@media screen and (min-width: 80rem) {
		.grid {
			--cols: 5;
		}
	}

	.item {
		display: none;
		break-inside: avoid;
		/*margin: 0;*/
		/*padding: 0;*/
	}

	.item.active {
		display: block;
	}

	figure {
		break-inside: avoid;
		margin: 16px auto;
		padding: 0;
	}

	figure img,
	figure figcaption {
		width: 100%;
	}

	figcaption {
		background: var(--text);
		color: var(--back);
		padding: 2px 4px;
		font-size: 0.6rem;
	}
</style>