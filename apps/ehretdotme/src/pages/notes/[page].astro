---
import Layout from "../../layouts/Layout.astro";
import { formatDate, getYear } from "@packages/utils/date";
import { getNotes, getNumberOfNotes } from "@packages/utils/storyblok";
import Pagination from "@packages/ui/v3/Pagination.astro";

export async function getStaticPaths() {
  const numberOfNotes = await getNumberOfNotes({
    token: import.meta.env.STORYBLOK_TOKEN,
  });

  const results = [];
  const total = Math.ceil(numberOfNotes / 25);
  for (let i = 0; i < total; i++) {
    results.push({
      params: {
        page: i + 1,
      },
      props: {
        total,
      },
    });
  }
  return results;
}

const { page } = Astro.params;
const { total } = Astro.props;
const currentPage = parseInt(page, 10);

const posts = (
  await getNotes({
    language: "en",
    page: currentPage,
    perPage: 25,
    token: import.meta.env.STORYBLOK_TOKEN,
  })
).map((story) => ({
  title: story.name,
  date: formatDate(new Date(story.first_published_at)),
  description: story.content.description,
  slug: story.slug,
}));
---

<Layout title="/notes [ehret.me]">
  <h1>Notes.</h1>
  <p>A little of everything and a lot of nothing.</p>
  <nav>
    {
      posts.map((post) => (
        <section data-year={getYear(post.date)}>
          <h2>
            <a href={`/${post.slug}`}>{post.title}</a>
          </h2>
          <div>
            <time datetime={post.date}>{formatDate(post.date)}</time>
          </div>
          <p>{post.description}</p>
        </section>
      ))
    }
  </nav>
  <Pagination page={currentPage} total={total} />
</Layout>

<style>
  time {
    font-variant: tabular-nums;
  }

  li {
    margin: 0;
    padding: 0;
  }

  section {
    margin: 1rem 0;
  }

  section > * {
    margin: 0;
  }

  section[data-year] {
    position: relative;
  }

  section[data-year]::before {
    display: block;
    background: var(--prime);
    color: var(--wevet);
    padding: 0.5rem 1rem;
    font-weight: bold;
    font-variant: tabular-nums;
    border: 2px solid var(--back);
  }

  @media screen and (min-width: 60rem) {
    section[data-year]::before {
      position: absolute;
      right: 0;
      top: 0;
      transform: rotate(-90deg) translateX(-1rem) translateY(-4.5rem);
    }
  }

  section[data-year="2023"]::before {
    content: "2023";
  }
  section[data-year="2022"]::before {
    content: "2022";
  }
  section[data-year="2021"]::before {
    content: "2021";
  }
  section[data-year="2020"]::before {
    content: "2020";
  }
  section[data-year="2019"]::before {
    content: "2019";
  }
  section[data-year="2018"]::before {
    content: "2018";
  }
  section[data-year="2017"]::before {
    content: "2017";
  }
  section[data-year="2016"]::before {
    content: "2016";
  }
  section[data-year="2015"]::before {
    content: "2015";
  }
  section[data-year="2014"]::before {
    content: "2014";
  }
  section[data-year="2013"]::before {
    content: "2013";
  }
  section[data-year="2012"]::before {
    content: "2012";
  }
  section[data-year="2011"]::before {
    content: "2011";
  }

  section[data-year="2023"] + section[data-year="2023"]::before,
  section[data-year="2022"] + section[data-year="2022"]::before,
  section[data-year="2021"] + section[data-year="2021"]::before,
  section[data-year="2020"] + section[data-year="2020"]::before,
  section[data-year="2019"] + section[data-year="2019"]::before,
  section[data-year="2018"] + section[data-year="2018"]::before,
  section[data-year="2017"] + section[data-year="2017"]::before,
  section[data-year="2016"] + section[data-year="2016"]::before,
  section[data-year="2015"] + section[data-year="2015"]::before,
  section[data-year="2014"] + section[data-year="2014"]::before,
  section[data-year="2013"] + section[data-year="2013"]::before,
  section[data-year="2012"] + section[data-year="2012"]::before,
  section[data-year="2011"] + section[data-year="2011"]::before {
    content: "";
    padding: 0;
    border: 0;
  }
</style>
