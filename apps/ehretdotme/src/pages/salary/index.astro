---
import { getCollection } from "astro:content";
import Layout from "../../layouts/Layout.astro";
import Responsive from "@packages/ui/Responsive.astro";

const entries = await getCollection("jobs");

const items = entries
  .map((item) => {
    return {
      ...item.data,
    };
  })
  .sort((a, b) => b.startDate.localeCompare(a.startDate));

function f(amount: number, currency: string) {
  return new Intl.NumberFormat("en", { style: "currency", currency }).format(
    amount,
  );
}
---

<Layout title="/salary [ehret.me]">
  <Responsive>
    <h1>Salary transparency</h1>

    <p>
      Following the example from <a
        href="https://xeiaso.net/salary-transparency">this page</a
      >, here is an overview on my different jobs and associated salaries.
    </p>
    <p>
      ðŸš§ This is the first version of this page, some numbers are wrong because
      I have not been through all my archives yet; starting with MetLife, I am
      confident with the numbers. I will also include raises.
    </p>

    <table>
      <thead>
        <tr>
          <th>Title</th>
          <th>Company</th>
          <th>Start</th>
          <th>End</th>
          <th>Entry Salary</th>
          <th>Note</th>
        </tr>
      </thead>
      <tbody>
        {
          items.map((item) => (
            <tr>
              <td data-before="Title">{item.title}</td>
              <td data-before="Company">
                <a href={item.url}>{item.company}</a>
              </td>
              <td data-before="Start">{item.startDate}</td>
              <td data-before="End">{item.endDate ?? ""}</td>
              <td data-before="Entry Salary">
                {item.salary && (
                  <Fragment>
                    <span>{f(item.salary, item.currency)}</span>
                    {item.variable && (
                      <Fragment>
                        <br />+ Variable: {f(item.variable, item.currency)}
                      </Fragment>
                    )}
                    {item.bonus && (
                      <Fragment>
                        <br />+ Bonus: {f(item.bonus, item.currency)} (
                        {item.bonusDescription})
                      </Fragment>
                    )}
                  </Fragment>
                )}
              </td>
              <td data-before="Note">{item.comment ?? ""}</td>
            </tr>
          ))
        }
      </tbody>
    </table>
  </Responsive>
</Layout>

<style>
  table {
    display: block;
    border-collapse: collapse;
  }

  thead {
    display: none;
  }

  tbody tr {
    display: block;
  }

  tbody td {
    display: block;
  }

  tbody tr {
    border-top: 1px solid var(--text);
    margin-top: var(--base);
    padding-top: var(--base);
  }

  tbody tr:first-child {
    border-top: none;
  }

  tbody td::before {
    display: block;
    font-style: italic;
    margin-inline-start: calc(-1 * var(--base));
    content: attr(data-before);
  }

  @media screen and (min-width: 34rem) {
    table {
      display: table;
      border-collapse: collapse;
    }

    td {
      padding: var(--base);
    }

    td:first-child {
      padding-inline-start: 0;
    }

    td:last-child {
      padding-inline-end: 0;
    }

    thead {
      display: table-header-group;
    }

    tbody tr {
      display: table-row;
    }

    tbody td {
      display: table-cell;
      border-top: 1px solid var(--text);
    }

    tbody td::before {
      display: none;
    }
  }
</style>
