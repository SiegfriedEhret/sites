---
import { formatDate } from "@packages/utils/date";
import Layout from "../../layouts/Layout.astro";
import { type CollectionEntry, getCollection } from "astro:content";
import Responsive from "@packages/ui/Responsive.astro";
import SuperTitle from "@packages/ui/SuperTitle.astro";

export async function getStaticPaths() {
  const posts = await getCollection("posts");
  const allTags: string[] = posts.flatMap((el) => el.data.tags ?? []);
  const tags: string[] = [...new Set(allTags)].filter((t) => !!t);

  return tags.map((t) => {
    return {
      params: { tag: t },
      props: {
        tag: t,
        posts: posts
          .filter((el) => (el.data.tags ?? []).includes(t))
          .sort((a, b) =>
            b.data.date.toISOString().localeCompare(a.data.date.toISOString()),
          ),
      },
    };
  });
}

interface Props {
  tag: string;
  posts: CollectionEntry<"posts">[];
}

const { tag, posts } = Astro.props;

const title = `Posts tagged with "${tag}"`;
---

<Layout title={title}>
  <nav>
    <SuperTitle title={title} />
    <Responsive>
      {
        posts.map((entry) => (
          <div class="post">
            <a href={`/${entry.slug}`}>{title}</a>
            <time datetime={entry.data.date.toISOString()}>
              {formatDate(entry.data.date)}
            </time>
            <span>{entry.data.description}</span>
          </div>
        ))
      }
    </Responsive>
  </nav>
</Layout>

<style>
  .post {
    display: flex;
    flex-direction: column;
    margin-block: var(--babase);
  }
</style>
